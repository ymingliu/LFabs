% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LFabs.r
\name{LFabs}
\alias{LFabs}
\title{A Forward and Backward Stagewise algorithm for High-dimensional smoothed partial rank estimation with sparse laplacian shrinkage.}
\usage{
LFabs(
  X,
  y,
  s = NULL,
  sigma = NULL,
  weight = NULL,
  model = c("spr", "cox", "lm"),
  tau = 0,
  stoping = TRUE,
  eps = 0.02,
  xi = 10^-6,
  iter = 10^4,
  lambda.min = 1e-04
)
}
\arguments{
\item{X}{The design matrix.}

\item{y}{The response.}

\item{s}{The status.}

\item{sigma}{The smoothing parameter in SPR.}

\item{weight}{The weight vector of adaptive lasso.}

\item{model}{The loss function. Quantitative for model="spr", model="cox", model="lm".}

\item{tau}{The turning parameter before the laplacian penalty. Default is 0.}

\item{stoping}{The indicator of whether to stop iteration when lambda is less than lambda.min.}

\item{eps}{The step size for updating coefficients. Default is 0.02.}

\item{xi}{The threshhold for LFabs.}

\item{iter}{The maximum number of outer-loop iterations allowed.}

\item{lambda.min}{The smallest value for lambda, as a stopping Criterion of the solution path.}
}
\value{
A list.
\itemize{
\item Beta - The standardized estimator along the solution path.
\item beta - The optimal standardized estimator.
\item lambda - Lambda sequence generated by LFabs.
\item direction - Direction of LFabs. \code{1} indicates a forward step. \code{0} indicates a backward step.
\item active - Active set for each step.
\item iter - Iterations.
\item bic - The bic for each solution.
\item opt - Position of the optimal lambda based on bic.
}
}
\description{
The laplacian shrinkage level is fixed, which means \code{tau} is predetermined.
}
\examples{
library(mvtnorm)
library(Matrix)

n = 400
p = 500
d = 15
g = 5
sig = c(0.5, 1.5)
rho = 0.9
error = "contaminate"
tran = "log"
censor.rate = 0.1
block = "Auto"

set.seed(2021)
dat = generator(n, p, d, g, sig, rho, error, tran, censor.rate, block)
x = dat$x
y = dat$y
status = dat$status

sigma = 1/sqrt(n)
w = abs(1/drop(cor(x, y, method = "pearson")))
w[which(w=="NaN"|w=="Inf")] = max(w[which(w!="NaN"&w!="Inf")])
model = "spr"
tau = 0.5
fit <- LFabs(x, y, status, sigma, w, model, tau)
}
