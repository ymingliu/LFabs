% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.LFabs.r
\name{cv.LFabs}
\alias{cv.LFabs}
\title{A Forward and Backward Stagewise algorithm for High-dimensional smoothed partial rank estimation with sparse laplacian shrinkage.}
\usage{
cv.LFabs(
  X,
  y,
  s = NULL,
  sigma = NULL,
  weight = NULL,
  model = c("spr", "cox", "lm"),
  ntau = 5,
  nfold = 5
)
}
\arguments{
\item{X}{The design matrix.}

\item{y}{The response.}

\item{s}{The status.}

\item{sigma}{The smoothing parameter in SPR.}

\item{weight}{The weight vector of adaptive lasso.}

\item{model}{The loss function. Quantitative for model="spr", model="cox", model="lm".}

\item{ntau}{The length of the grid of the turning parameter before the laplacian penalty. Default is 5.}

\item{nfold}{The \code{nfold}-fold cross-validation. Default is 5.}
}
\value{
A list.
\itemize{
\item Beta - The standardized estimator along the solution path.
\item beta - The optimal standardized estimator.
\item lambda - Lambda sequence generated by LFabs.
\item tau - The optimal laplacian shrinkage level choosed by cross-validation.
\item direction - Direction of LFabs. \code{1} indicates a forward step. \code{0} indicates a backward step.
\item active - Active set for each step.
\item iter - Iterations.
\item bic - The bic for each solution.
\item opt - Position of the optimal lambda based on bic.
}
}
\description{
The laplacian shrinkage level is choosed by the cross-validation. This function uses the testing loss to select the turning.
}
\examples{
library(mvtnorm)
library(Matrix)

n = 400
p = 500
d = 15
g = 5
sig = c(0.5, 1.5)
rho = 0.9
error = "contaminate"
tran = "log"
censor.rate = 0.1
block = "Auto"

set.seed(2021)
dat = generator(n, p, d, g, sig, rho, error, tran, censor.rate, block)
x = dat$x
y = dat$y
status = dat$status

sigma = 1/sqrt(n)
w = abs(1/drop(cor(x, y, method = "pearson")))
w[which(w=="NaN"|w=="Inf")] = max(w[which(w!="NaN"&w!="Inf")])
model = "spr"
fit <- cv.LFabs(x, y, status, sigma, w, model)
}
\seealso{
\code{LFabs}.
}
